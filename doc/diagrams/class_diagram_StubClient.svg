<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="241.65px" preserveAspectRatio="none" style="width:766px;height:241px;" version="1.1" viewBox="0 0 766 241" width="766.8px" zoomAndPan="magnify"><defs><filter height="300%" id="fllgso35lbq88" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.7"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="5.4" dy="5.4" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[f1d91c39b105398bbb6d06e662c735c5]
class StubClient--><rect codeLine="3" fill="#FEFECE" filter="url(#fllgso35lbq88)" height="214.2281" id="StubClient" style="stroke:#A80036;stroke-width:2.0250000000000004;" width="738.45" x="9.45" y="9.45"/><ellipse cx="333.7875" cy="31.05" fill="#A9DCDF" rx="14.85" ry="14.85" style="stroke:#A80036;stroke-width:1.35;"/><path d="M336.15,33.075 L331.6992,33.075 L331.1086,34.425 L331.1086,34.425 L331.7414,34.425 L332.4375,35.2688 L332.4375,35.775 L332.4375,36.2813 L331.7414,37.125 L331.1086,37.125 L328.5563,37.125 L327.7336,37.125 L327.0375,36.2813 L327.0375,35.775 L327.0375,35.2688 L327.7336,34.425 L328.5563,34.425 L331.6781,26.325 L330.4969,26.325 L329.0836,26.325 L328.3875,25.4813 L328.3875,24.975 L328.3875,24.4688 L329.0836,23.625 L330.4969,23.625 L335.4539,23.625 L339.082,34.425 L339.8414,34.425 L339.8414,34.425 L340.5375,35.2688 L340.5375,35.775 L340.5375,36.2813 L339.8414,37.125 L339.082,37.125 L336.5297,37.125 L335.8336,37.125 L335.1375,36.2813 L335.1375,35.775 L335.1375,35.2688 L335.8336,34.425 L336.5297,34.425 L336.5297,34.425 L336.15,33.075 Z M335.4117,30.375 L333.7875,25.5445 L332.3953,30.375 L335.4117,30.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="16.2" font-style="italic" lengthAdjust="spacing" textLength="78.3" x="361.4625" y="37.6787">StubClient</text><line style="stroke:#A80036;stroke-width:2.0250000000000004;" x1="10.8" x2="746.55" y1="52.65" y2="52.65"/><polygon fill="none" points="24.3,60.75,29.7,66.15,24.3,71.55,18.9,66.15" style="stroke:#B38D22;stroke-width:1.35;"/><text fill="#000000" font-family="sans-serif" font-size="14.85" lengthAdjust="spacing" textLength="86.4" x="36.45" y="73.4656">Config config</text><line style="stroke:#A80036;stroke-width:2.0250000000000004;" x1="10.8" x2="746.55" y1="82.1285" y2="82.1285"/><polygon fill="#FFFF44" points="24.3,90.2285,29.7,95.6285,24.3,101.0285,18.9,95.6285" style="stroke:#B38D22;stroke-width:1.35;"/><text fill="#000000" font-family="sans-serif" font-size="14.85" lengthAdjust="spacing" textLength="162" x="36.45" y="102.9441">StubClient(Config config)</text><polygon fill="#FFFF44" points="24.3,108.907,29.7,114.307,24.3,119.707,18.9,114.307" style="stroke:#B38D22;stroke-width:1.35;"/><text fill="#000000" font-family="sans-serif" font-size="14.85" lengthAdjust="spacing" textLength="508.95" x="36.45" y="121.6226">&lt;T&gt; T sendAndReceive(int functionNumber, InetAddress inetAddress, int port)</text><polygon fill="#FFFF44" points="24.3,127.5855,29.7,132.9855,24.3,138.3855,18.9,132.9855" style="stroke:#B38D22;stroke-width:1.35;"/><text fill="#000000" font-family="sans-serif" font-size="14.85" lengthAdjust="spacing" textLength="656.1" x="36.45" y="140.3011">&lt;T&gt; T sendAndReceive(int functionNumber, Serializable argument, InetAddress inetAddress, int port)</text><polygon fill="#FFFF44" points="24.3,146.2641,29.7,151.6641,24.3,157.0641,18.9,151.6641" style="stroke:#B38D22;stroke-width:1.35;"/><text fill="#000000" font-family="sans-serif" font-size="14.85" lengthAdjust="spacing" textLength="703.35" x="36.45" y="158.9796">&lt;T&gt; T sendAndReceive(int functionNumber, List&lt;Serializable&gt; arguments, InetAddress inetAddress, int port)</text><polygon fill="#FFFF44" points="24.3,164.9426,29.7,170.3426,24.3,175.7426,18.9,170.3426" style="stroke:#B38D22;stroke-width:1.35;"/><text fill="#000000" font-family="sans-serif" font-size="14.85" lengthAdjust="spacing" textLength="676.35" x="36.45" y="177.6582">&lt;T&gt; T sendAndReceive(StubRequestMessage stubRequestMessage, InetAddress inetAddress, int port)</text><polygon fill="#FFFF44" points="24.3,183.6211,29.7,189.0211,24.3,194.4211,18.9,189.0211" style="stroke:#B38D22;stroke-width:1.35;"/><text fill="#000000" font-family="sans-serif" font-size="14.85" lengthAdjust="spacing" textLength="456.3" x="36.45" y="196.3367">byte[] sendAndReceive(byte[] data, InetAddress inetAddress, int port)</text><polygon fill="#FFFF44" points="24.3,202.2996,29.7,207.6996,24.3,213.0996,18.9,207.6996" style="stroke:#B38D22;stroke-width:1.35;"/><text fill="#000000" font-family="sans-serif" font-size="14.85" lengthAdjust="spacing" textLength="680.4" x="36.45" y="215.0152">byte[] sendAndReceive(DatagramSocket datagramSocket, byte[] data, InetAddress inetAddress, int port)</text><!--MD5=[dddf5aa13ce50e2601f4a15ce7090d9d]
@startuml
'https://plantuml.com/class-diagram

abstract class StubClient{
    # Config config
    # StubClient(Config config)
    # <T> T sendAndReceive(int functionNumber, InetAddress inetAddress, int port)
    # <T> T sendAndReceive(int functionNumber, Serializable argument, InetAddress inetAddress, int port)
    # <T> T sendAndReceive(int functionNumber, List<Serializable> arguments, InetAddress inetAddress, int port)
    # <T> T sendAndReceive(StubRequestMessage stubRequestMessage, InetAddress inetAddress, int port)
    # byte[] sendAndReceive(byte[] data, InetAddress inetAddress, int port)
    # byte[] sendAndReceive(DatagramSocket datagramSocket, byte[] data, InetAddress inetAddress, int port)
}

@enduml

@startuml

abstract class StubClient{
    # Config config
    # StubClient(Config config)
    # <T> T sendAndReceive(int functionNumber, InetAddress inetAddress, int port)
    # <T> T sendAndReceive(int functionNumber, Serializable argument, InetAddress inetAddress, int port)
    # <T> T sendAndReceive(int functionNumber, List<Serializable> arguments, InetAddress inetAddress, int port)
    # <T> T sendAndReceive(StubRequestMessage stubRequestMessage, InetAddress inetAddress, int port)
    # byte[] sendAndReceive(byte[] data, InetAddress inetAddress, int port)
    # byte[] sendAndReceive(DatagramSocket datagramSocket, byte[] data, InetAddress inetAddress, int port)
}

@enduml

PlantUML version 1.2021.01(Tue Feb 02 02:55:08 EST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: Cp1252
Language: en
Country: US
--></g></svg>